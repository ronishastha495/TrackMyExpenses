@page "/"
@using TrackMyExpenses.Model
@using TrackMyExpenses.Services

@inject UserServices UserServices
@inject NavigationManager NavigationManager

<div class="min-h-screen bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
    <div class="w-full max-w-sm p-6 bg-white rounded-lg shadow-md">
        <h3 class="text-center text-2xl font-semibold text-gray-800 mb-4">Login</h3>

        <!-- Username Field -->
        <div class="mb-4">
            <label for="username" class="block text-sm font-medium text-gray-700">Username</label>
            <input id="username" @bind="LoginUsername" placeholder="Enter your username"
                class="w-full mt-2 p-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" />
        </div>

        <!-- Password Field -->
        <div class="mb-4">
            <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
            <input id="password" @bind="LoginPassword" type="password" placeholder="Enter your password"
                class="w-full mt-2 p-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500" />
        </div>

        <!-- Login Button -->
        <button @onclick="HandleLogin"
            class="w-full py-2 px-4 bg-blue-500 hover:bg-blue-600 text-white font-bold rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400">
            Login
        </button>

        <!-- Error Message Display -->
        @if (!string.IsNullOrEmpty(Message))
        {
                <p class="text-red-500 text-sm mt-4">@Message</p>
        }

        <!-- Register Link -->
        <div class="mt-6 text-center">
            <p class="text-sm text-gray-600">
                Don't have an account? <a href="#" @onclick="NavigateToRegister" class="text-blue-500 hover:underline">Register</a>
            </p>
        </div>
    </div>
</div>

@code {
    private string LoginUsername = "";
    private string LoginPassword = "";
    private string Message = "";

    private List<User> Users = new();
    private string SelectedCurrency = "";
    protected override void OnInitialized()
    {
        // Load existing users from UserServices
        Users = UserServices.LoadUsers();
    }

    private async void HandleLogin()
    {
        // Check if all fields are filled
        if (string.IsNullOrWhiteSpace(LoginUsername) || string.IsNullOrWhiteSpace(LoginPassword))
        {
            Message = "Username and password are required.";
            return;
        }

        var user = Users.FirstOrDefault(u => u.UserName == LoginUsername);
        if (user == null)
        {
            Message = "User not found.";
            return;
        }

        if (!UserServices.ValidatePassword(LoginPassword, user.Password))
        {
            Message = "Invalid password.";
            return;
        }

        UserServices.SetLoggedInUser(user);
        SelectedCurrency = user.PreferredCurrency;

        // Successful login
        Message = "Login successful. Redirecting to home...";

        // Redirect after a delay
        await Task.Delay(2000);
        NavigationManager.NavigateTo("/dashboard");
    }

    private void NavigateToRegister()
    {
        // Redirect to registration page
        NavigationManager.NavigateTo("/register");
    }
}
